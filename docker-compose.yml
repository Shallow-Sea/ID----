version: '3.8'

services:
  # MySQL 数据库
  db:
    image: mysql:8.0
    container_name: card-system-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: card-system-backend
    restart: always
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network
    command: npm run start

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: card-system-frontend
    restart: always
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - backend

  # Telegram机器人服务
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: card-system-bot
    restart: always
    environment:
      TG_BOT_TOKEN: ${TG_BOT_TOKEN}
      BACKEND_URL: http://backend:3000
    volumes:
      - ./bot:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    depends_on:
      - backend

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: 